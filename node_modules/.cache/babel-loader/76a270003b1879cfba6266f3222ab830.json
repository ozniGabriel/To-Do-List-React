{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\bootcamp-eduzz\\\\reactJs\\\\react-hooks\\\\react-hooks\\\\src\\\\components\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Tarefas from './Tarefas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet objetivos = [];\nlet fundo = [];\nlet texto = []; // BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\n\nfunction buscarTarefas() {\n  //  VARIAVEL QUE BUSCA NA LOCALSTORAGE AS TAREFAS ATUAIS, QUADNO A PAGINA FOR RECARREGADA\n  let objetivosAtualizados = JSON.parse(localStorage.getItem('tarefas'));\n\n  if (objetivosAtualizados !== null && objetivosAtualizados.length > 0) {\n    let estiloFundo = JSON.parse(localStorage.getItem(\"estiloFundo\"));\n    let estiloTexto = JSON.parse(localStorage.getItem(\"estiloTexto\"));\n    return objetivosAtualizados.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Tarefas, {\n        item: item,\n        index: index,\n        texto: estiloTexto[index],\n        fundo: estiloFundo[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    });\n  } else {\n    localStorage.setItem(\"estiloFundo\", JSON.stringify([]));\n    localStorage.setItem(\"estiloTexto\", JSON.stringify([]));\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sem nada pra fazer?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n} // ATUALIZA A LISTA DA LOCAL STORAGE\n\n\nfunction atualizarTarefas(listaAtualizada, fundo, texto) {\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada));\n  localStorage.setItem('estiloFundo', JSON.stringify(fundo));\n  localStorage.setItem('estiloTexto', JSON.stringify(texto));\n}\n\nconst TodoList = () => {\n  _s();\n\n  const [arr, setArr] = useState(objetivos);\n\n  const addTarefa = () => {\n    let novaTarefa = prompt('Digite a nova Tarefa:');\n    objetivos = JSON.parse(localStorage.getItem('tarefas'));\n    fundo = JSON.parse(localStorage.getItem(\"estiloFundo\"));\n    texto = JSON.parse(localStorage.getItem(\"estiloTexto\"));\n    objetivos.push(novaTarefa);\n    fundo.push(\"aliceblue\");\n    texto.push(\"none\");\n    atualizarTarefas(objetivos, fundo, texto);\n    return setArr(buscarTarefas);\n  };\n\n  const resetarLista = () => {\n    localStorage.removeItem('tarefas');\n    localStorage.removeItem('estiloTexto');\n    localStorage.removeItem('estiloFundo');\n    objetivos = [];\n    fundo = [];\n    texto = [];\n    return setArr(atualizarTarefas(objetivos, fundo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: buscarTarefas()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTarefa,\n      className: \"btn btn-success\",\n      children: \"Nova Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetarLista,\n      className: \"btn btn-danger\",\n      children: \"Reiniciar Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"/dP/ENeEzg+GnxSF/AfwbB0xvMc=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/dev/bootcamp-eduzz/reactJs/react-hooks/react-hooks/src/components/TodoList.jsx"],"names":["React","useState","Tarefas","objetivos","fundo","texto","buscarTarefas","objetivosAtualizados","JSON","parse","localStorage","getItem","length","estiloFundo","estiloTexto","map","item","index","setItem","stringify","atualizarTarefas","listaAtualizada","TodoList","arr","setArr","addTarefa","novaTarefa","prompt","push","resetarLista","removeItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Tarefas from './Tarefas'\r\n\r\nlet objetivos = []\r\nlet fundo = []\r\nlet texto = []\r\n\r\n// BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\r\nfunction buscarTarefas() {\r\n  //  VARIAVEL QUE BUSCA NA LOCALSTORAGE AS TAREFAS ATUAIS, QUADNO A PAGINA FOR RECARREGADA\r\n  let objetivosAtualizados = JSON.parse(localStorage.getItem('tarefas'))\r\n\r\n  if(objetivosAtualizados !== null && objetivosAtualizados.length > 0){\r\n    let estiloFundo = JSON.parse(localStorage.getItem(\"estiloFundo\"))\r\n    let estiloTexto = JSON.parse(localStorage.getItem(\"estiloTexto\"))\r\n\r\n    return objetivosAtualizados.map((item, index) => {\r\n      return <Tarefas item={item} index={index} key={index} texto={estiloTexto[index]} fundo={estiloFundo[index]}/>\r\n    })\r\n\r\n  } else {\r\n    localStorage.setItem(\"estiloFundo\", JSON.stringify([]))\r\n    localStorage.setItem(\"estiloTexto\", JSON.stringify([]))\r\n    return (<h3>Sem nada pra fazer?</h3>)\r\n  }\r\n}\r\n\r\n// ATUALIZA A LISTA DA LOCAL STORAGE\r\nfunction atualizarTarefas(listaAtualizada, fundo, texto) {\r\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada))\r\n  localStorage.setItem('estiloFundo', JSON.stringify(fundo))\r\n  localStorage.setItem('estiloTexto', JSON.stringify(texto))\r\n}\r\n\r\nconst TodoList = () => {\r\n  const [arr, setArr] = useState(objetivos)\r\n  \r\n  const addTarefa = () => {\r\n    let novaTarefa = prompt('Digite a nova Tarefa:')\r\n    objetivos = JSON.parse(localStorage.getItem('tarefas'))\r\n    fundo = JSON.parse(localStorage.getItem(\"estiloFundo\"))\r\n    texto =  JSON.parse(localStorage.getItem(\"estiloTexto\"))\r\n    objetivos.push(novaTarefa)\r\n    fundo.push(\"aliceblue\")\r\n    texto.push(\"none\")\r\n    atualizarTarefas(objetivos, fundo, texto)\r\n    return setArr(buscarTarefas)\r\n  }\r\n\r\n  const resetarLista = ()=>{\r\n    localStorage.removeItem('tarefas')\r\n    localStorage.removeItem('estiloTexto')\r\n    localStorage.removeItem('estiloFundo')\r\n    objetivos = []\r\n    fundo = []\r\n    texto = []\r\n    return setArr(atualizarTarefas(objetivos, fundo, ))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>{buscarTarefas()}</ul>\r\n      <button onClick={addTarefa} className=\"btn btn-success\">\r\n        Nova Tarefa\r\n      </button>\r\n      <button onClick={resetarLista} className=\"btn btn-danger\">\r\n        Reiniciar Lista\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}