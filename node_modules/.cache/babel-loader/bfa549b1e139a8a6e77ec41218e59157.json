{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\bootcamp-eduzz\\\\reactJs\\\\react-hooks\\\\react-hooks\\\\src\\\\components\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Tarefas from './Tarefas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet objetivos = JSON.parse(localStorage.getItem('tarefas')); // BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\n\nfunction buscarTarefas() {\n  localStorage.setItem(\"tarefas\");\n\n  if (objetivosAtualizados !== null && objetivosAtualizados.length > 0) {\n    return objetivosAtualizados.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Tarefas, {\n        item: item,\n        index: index,\n        estilo: estiloAtual[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sem nada pra fazer?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n} // ATUALIZA A LISTA DA LOCAL STORAGE\n\n\nfunction atualizarTarefas(listaAtualizada) {\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada));\n}\n\nconst TodoList = () => {\n  _s();\n\n  const [arr, setArr] = useState(objetivos);\n\n  const addTarefa = () => {\n    let novaTarefa = prompt('Digite a nova Tarefa:');\n    objetivos.push(novaTarefa);\n    atualizarTarefas(objetivos);\n    return setArr(buscarTarefas);\n  };\n\n  const resetarLista = () => {\n    localStorage.removeItem('tarefas');\n    objetivos = [];\n    return setArr(atualizarTarefas(objetivos));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: buscarTarefas()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTarefa,\n      className: \"btn btn-success\",\n      children: \"Nova Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetarLista,\n      className: \"btn btn-danger\",\n      children: \"Reiniciar Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"/dP/ENeEzg+GnxSF/AfwbB0xvMc=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/dev/bootcamp-eduzz/reactJs/react-hooks/react-hooks/src/components/TodoList.jsx"],"names":["React","useState","Tarefas","objetivos","JSON","parse","localStorage","getItem","buscarTarefas","setItem","objetivosAtualizados","length","map","item","index","estiloAtual","atualizarTarefas","listaAtualizada","stringify","TodoList","arr","setArr","addTarefa","novaTarefa","prompt","push","resetarLista","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB,C,CAEA;;AACA,SAASC,aAAT,GAAyB;AACvBF,EAAAA,YAAY,CAACG,OAAb,CAAqB,SAArB;;AACA,MAAGC,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,CAACC,MAArB,GAA8B,CAAlE,EAAoE;AAClE,WAAOD,oBAAoB,CAACE,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,0BAAO,QAAC,OAAD;AAAS,QAAA,IAAI,EAAED,IAAf;AAAqB,QAAA,KAAK,EAAEC,KAA5B;AAA+C,QAAA,MAAM,EAAEC,WAAW,CAACD,KAAD;AAAlE,SAAwCA,KAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAJD,MAIO;AACL,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;AACF,C,CAED;;;AACA,SAASE,gBAAT,CAA0BC,eAA1B,EAA2C;AACzCX,EAAAA,YAAY,CAACG,OAAb,CAAqB,SAArB,EAAgCL,IAAI,CAACc,SAAL,CAAeD,eAAf,CAAhC;AACD;;AAED,MAAME,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAACE,SAAD,CAA9B;;AAEA,QAAMmB,SAAS,GAAG,MAAM;AACtB,QAAIC,UAAU,GAAGC,MAAM,CAAC,uBAAD,CAAvB;AACArB,IAAAA,SAAS,CAACsB,IAAV,CAAeF,UAAf;AACAP,IAAAA,gBAAgB,CAACb,SAAD,CAAhB;AACA,WAAOkB,MAAM,CAACb,aAAD,CAAb;AACD,GALD;;AAOA,QAAMkB,YAAY,GAAG,MAAI;AACvBpB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,SAAxB;AACAxB,IAAAA,SAAS,GAAG,EAAZ;AACA,WAAOkB,MAAM,CAACL,gBAAgB,CAACb,SAAD,CAAjB,CAAb;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA,gBAAKK,aAAa;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEc,SAAjB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEI,YAAjB;AAA+B,MAAA,SAAS,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAzBD;;GAAMP,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Tarefas from './Tarefas'\r\n\r\nlet objetivos = JSON.parse(localStorage.getItem('tarefas'))\r\n\r\n// BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\r\nfunction buscarTarefas() {\r\n  localStorage.setItem(\"tarefas\")\r\n  if(objetivosAtualizados !== null && objetivosAtualizados.length > 0){\r\n    return objetivosAtualizados.map((item, index) => {\r\n      return <Tarefas item={item} index={index} key={index} estilo={estiloAtual[index]}/>\r\n    })\r\n  } else {\r\n    return (<h3>Sem nada pra fazer?</h3>)\r\n  }\r\n}\r\n\r\n// ATUALIZA A LISTA DA LOCAL STORAGE\r\nfunction atualizarTarefas(listaAtualizada) {\r\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada))\r\n}\r\n\r\nconst TodoList = () => {\r\n  const [arr, setArr] = useState(objetivos)\r\n  \r\n  const addTarefa = () => {\r\n    let novaTarefa = prompt('Digite a nova Tarefa:')\r\n    objetivos.push(novaTarefa)\r\n    atualizarTarefas(objetivos)\r\n    return setArr(buscarTarefas)\r\n  }\r\n\r\n  const resetarLista = ()=>{\r\n    localStorage.removeItem('tarefas')\r\n    objetivos = []\r\n    return setArr(atualizarTarefas(objetivos))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>{buscarTarefas()}</ul>\r\n      <button onClick={addTarefa} className=\"btn btn-success\">\r\n        Nova Tarefa\r\n      </button>\r\n      <button onClick={resetarLista} className=\"btn btn-danger\">Reiniciar Lista</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}