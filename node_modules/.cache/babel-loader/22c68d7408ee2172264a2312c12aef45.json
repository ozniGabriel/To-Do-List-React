{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\bootcamp-eduzz\\\\reactJs\\\\react-hooks\\\\react-hooks\\\\src\\\\components\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Tarefas from './Tarefas';\nimport objetivos from './objetivos.js'; // BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction buscarTarefas() {\n  let objetivosAtualizados = JSON.parse(localStorage.getItem('tarefas'));\n  return objetivosAtualizados.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tarefas, {\n      item: item,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  });\n}\n\nfunction atualizarTarefas(listaAtualizada) {\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada));\n}\n\nfunction resetarLista() {\n  localStorage.setItem(\"tarefas\", JSON.stringify(objetivos));\n}\n\nconst TodoList = () => {\n  _s();\n\n  const [arr, setArr] = useState(objetivos);\n\n  const addTarefa = () => {\n    let novaTarefa = prompt('Digite a nova Tarefa:');\n    objetivos.push(novaTarefa);\n    atualizarTarefas(objetivos);\n    return setArr(buscarTarefas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: buscarTarefas()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTarefa,\n      className: \"btn btn-success\",\n      children: \"Nova Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setArr(resetarLista),\n      className: \"btn btn-success\",\n      children: \"Reiniciar Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"/dP/ENeEzg+GnxSF/AfwbB0xvMc=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/dev/bootcamp-eduzz/reactJs/react-hooks/react-hooks/src/components/TodoList.jsx"],"names":["React","useState","Tarefas","objetivos","buscarTarefas","objetivosAtualizados","JSON","parse","localStorage","getItem","map","item","index","atualizarTarefas","listaAtualizada","setItem","stringify","resetarLista","TodoList","arr","setArr","addTarefa","novaTarefa","prompt","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;;;;AACA,SAASC,aAAT,GAAyB;AACvB,MAAIC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAA3B;AACA,SAAOJ,oBAAoB,CAACK,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,wBAAO,QAAC,OAAD;AAAS,MAAA,IAAI,EAAED,IAAf;AAAqB,MAAA,KAAK,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,CAAP;AAGD;;AAED,SAASC,gBAAT,CAA0BC,eAA1B,EAA2C;AACzCN,EAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAeF,eAAf,CAAhC;AACD;;AAED,SAASG,YAAT,GAAuB;AACrBT,EAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAeb,SAAf,CAAhC;AACD;;AAED,MAAMe,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAACE,SAAD,CAA9B;;AAEA,QAAMkB,SAAS,GAAG,MAAM;AACtB,QAAIC,UAAU,GAAGC,MAAM,CAAC,uBAAD,CAAvB;AACApB,IAAAA,SAAS,CAACqB,IAAV,CAAeF,UAAf;AACAT,IAAAA,gBAAgB,CAACV,SAAD,CAAhB;AACA,WAAOiB,MAAM,CAAChB,aAAD,CAAb;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA,gBAAKA,aAAa;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEiB,SAAjB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAKD,MAAM,CAACH,YAAD,CAA5B;AAA4C,MAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAnBD;;GAAMC,Q;;KAAAA,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Tarefas from './Tarefas'\r\nimport objetivos from './objetivos.js'\r\n\r\n// BUSCA NO LOCAL STORAGE AS TAREFAS JÁ SALVAS\r\nfunction buscarTarefas() {\r\n  let objetivosAtualizados = JSON.parse(localStorage.getItem('tarefas'))\r\n  return objetivosAtualizados.map((item, index) => {\r\n    return <Tarefas item={item} index={index} />\r\n  })\r\n}\r\n\r\nfunction atualizarTarefas(listaAtualizada) {\r\n  localStorage.setItem('tarefas', JSON.stringify(listaAtualizada))\r\n}\r\n\r\nfunction resetarLista(){\r\n  localStorage.setItem(\"tarefas\", JSON.stringify(objetivos))\r\n}\r\n\r\nconst TodoList = () => {\r\n  const [arr, setArr] = useState(objetivos)\r\n\r\n  const addTarefa = () => {\r\n    let novaTarefa = prompt('Digite a nova Tarefa:')\r\n    objetivos.push(novaTarefa)\r\n    atualizarTarefas(objetivos)\r\n    return setArr(buscarTarefas)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>{buscarTarefas()}</ul>\r\n      <button onClick={addTarefa} className=\"btn btn-success\">\r\n        Nova Tarefa\r\n      </button>\r\n      <button onClick={()=> setArr(resetarLista)} className=\"btn btn-success\">Reiniciar Lista</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}